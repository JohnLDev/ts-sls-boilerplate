org: johnldev
# app: ts-example
service: Propose
useDotenv: true
frameworkVersion: '2'

plugins:
  - serverless-dotenv-plugin
  - serverless-offline
  - serverless-webpack

custom:
  funcDir: src/4-framework/functions
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules:
      forceInclude: 
        - mysql2

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: '20201221'
  stage: ${opt:stage, "${env:stage, 'dev'}"}
  region: ${opt:region, "${env:region, 'us-east-1'}"}
  timeout: 28
  memorySize: 512
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - sns:Publish
            - sns:Subscribe
          Resource: 'arn:aws:sns:us-east-1:*:*'

        - Effect: "Allow"
          Action: 
            - sqs:SendMessage
            - sqs:GetQueueUrl
            - sqs:ListQueues
          Resource: "arn:aws:sqs:us-east-1:*:*"
          
  environment: 
    LOCALSTACK_HOST: ${env:LOCALSTACK_HOST, "localhost"}
    LOCALSTACK_PORT: ${env:LOCALSTACK_PORT, "4566"}
  vpc:
    securityGroupIds:
      - sg-01c5b51c6ac07e81d
    subnetIds:
      - subnet-05be106cc976db75c
      - subnet-07068b570660d194a
      - subnet-0c3b56549c93364ff
      - subnet-0e9f51f1cb27eab50
      - subnet-075e51883375ab8ce
      - subnet-0167b640074c77fad
        

functions:
  CreateUser:
    handler: ${self:custom.funcDir}/user/CreateUserFunction.handler
    events:
      - http:
          path: /user
          method: post
          cors: 
            origin: '*'
  DynamoTest:
    handler: ${self:custom.funcDir}/DynamoTest.handler
    events:
      - http:
          path: /Dynamo
          method: post
          cors: 
            origin: '*'
  sqs:
    handler: ${self:custom.funcDir}/sqs.handler
    events:
      - sqs:
          arn: 
            Fn::GetAtt:
              - SQSQueue
              - Arn

resources:
    - ${file("./devops/resources/sqs.yml")}
    - ${file("./devops/resources/sns.yml")}


package:
  individually: true
  excludeDevDependencies: true